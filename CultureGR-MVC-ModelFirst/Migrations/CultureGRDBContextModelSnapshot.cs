// <auto-generated />
using System;
using CultureGR_MVC_ModelFirst.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CultureGR_MVC_ModelFirst.Migrations
{
    [DbContext(typeof(CultureGRDBContext))]
    partial class CultureGRDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.ArchaeologicalSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Region")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ArchaeologicalSites", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.CategoryMuseum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CategoriesMuseums");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("collectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Excavation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Region")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Excavations", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianArchPlaces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EditorialTeam")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EditorialTeam" }, "IX_HistorianArchPlaces_EditorialTeam");

                    b.HasIndex(new[] { "UserId" }, "IX_HistorianArchPlaces_UserId")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "IX_HistorianArchPlaces_Username");

                    b.HasIndex(new[] { "WorkPhoneNumber" }, "IX_HistorianArchPlaces_WorkPhoneNumber")
                        .IsUnique();

                    b.ToTable("HistorianArchPlaces", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianMonuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EditorialTeam")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EditorialTeam" }, "IX_HistorianMonuments_EditorialTeam");

                    b.HasIndex(new[] { "UserId" }, "IX_HistorianMonuments_UserId")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "IX_HistorianMonuments_Username");

                    b.HasIndex(new[] { "WorkPhoneNumber" }, "IX_HistorianMonuments_WorkPhoneNumber")
                        .IsUnique();

                    b.ToTable("HistorianMonuments", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianMuseums", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EditorialTeam")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EditorialTeam" }, "IX_HistorianMuseums_EditorialTeam");

                    b.HasIndex(new[] { "UserId" }, "IX_HistorianMuseums_UserId")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "IX_HistorianMuseums_Username");

                    b.HasIndex(new[] { "WorkPhoneNumber" }, "IX_HistorianMuseums_WorkPhoneNumber")
                        .IsUnique();

                    b.ToTable("HistorianMuseums", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Monument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("monumentDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("monumentLocation")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("monumentName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Monuments", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Museum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("category_Id")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<int>("collection_Id")
                        .HasColumnType("int");

                    b.Property<string>("mus_address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("mus_avg_rate")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("mus_coordinate")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("mus_desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("mus_name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("mus_open")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("mus_phone")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("mus_region")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("timeperiod_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("category_Id");

                    b.HasIndex("collection_Id");

                    b.HasIndex("timeperiod_Id");

                    b.ToTable("Museums", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArchaeologicalSiteId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryMuseumId")
                        .HasColumnType("int");

                    b.Property<int?>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ExcavationId")
                        .HasColumnType("int");

                    b.Property<int?>("HistorianArchPlacesId")
                        .HasColumnType("int");

                    b.Property<int?>("HistorianMonumentsId")
                        .HasColumnType("int");

                    b.Property<int?>("HistorianMuseumsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MonumentId")
                        .HasColumnType("int");

                    b.Property<int?>("MuseumId")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int?>("TextEditorId")
                        .HasColumnType("int");

                    b.Property<int?>("TimePeriodId")
                        .HasColumnType("int");

                    b.Property<int?>("WriterArchPlacesId")
                        .HasColumnType("int");

                    b.Property<int?>("WriterMonumentsId")
                        .HasColumnType("int");

                    b.Property<int?>("WriterMuseumsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchaeologicalSiteId");

                    b.HasIndex("CategoryMuseumId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("ExcavationId");

                    b.HasIndex("HistorianArchPlacesId");

                    b.HasIndex("HistorianMonumentsId");

                    b.HasIndex("HistorianMuseumsId");

                    b.HasIndex("MonumentId");

                    b.HasIndex("MuseumId");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("TextEditorId");

                    b.HasIndex("TimePeriodId");

                    b.HasIndex("WriterArchPlacesId");

                    b.HasIndex("WriterMonumentsId");

                    b.HasIndex("WriterMuseumsId");

                    b.HasIndex(new[] { "Descr" }, "IX_Records_Description");

                    b.ToTable("Records", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Banned")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RePassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRole")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Banned" }, "IX_Subscribers_Banned");

                    b.HasIndex(new[] { "Firstname" }, "IX_Subscribers_Firstname")
                        .IsUnique();

                    b.HasIndex(new[] { "Lastname" }, "IX_Subscribers_Lastname")
                        .IsUnique();

                    b.HasIndex(new[] { "UserId" }, "IX_Subscribers_UserId")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "IX_Subscribers_Username");

                    b.ToTable("Subscribers", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.TextEditor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ΕditorialΤeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("TextEditor");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.TimePeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("periodDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("periodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("periodStartEnd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TimePeriods");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Identity")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RePassword")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecordId");

                    b.HasIndex(new[] { "Email" }, "IX_Users_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "IX_Users_Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterArchPlaces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EditorialTeam")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EditorialTeam" }, "IX_WriterArchPlaces_EditorialTeam");

                    b.HasIndex(new[] { "UserId" }, "IX_WriterArchPlaces_UserId")
                        .IsUnique();

                    b.HasIndex(new[] { "WorkPhoneNumber" }, "IX_WriterArchPlaces_WorkPhoneNumber")
                        .IsUnique();

                    b.ToTable("WriterArchPlaces", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterMonuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EditorialTeam")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EditorialTeam" }, "IX_WriterMonuments_EditorialTeam");

                    b.HasIndex(new[] { "UserId" }, "IX_WriterMonuments_UserId")
                        .IsUnique();

                    b.HasIndex(new[] { "WorkPhoneNumber" }, "IX_WriterMonuments_WorkPhoneNumber")
                        .IsUnique();

                    b.ToTable("WriterMonuments", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterMuseums", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EditorialTeam")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EditorialTeam" }, "IX_WriterMuseums_EditorialTeam");

                    b.HasIndex(new[] { "UserId" }, "IX_WriterMuseums_UserId")
                        .IsUnique();

                    b.HasIndex(new[] { "WorkPhoneNumber" }, "IX_WriterMuseums_WorkPhoneNumber")
                        .IsUnique();

                    b.ToTable("WriterMuseums", (string)null);
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.ArchaeologicalSite", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.CategoryMuseum", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Collection", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Excavation", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianArchPlaces", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithOne("HistorianArchPlaces")
                        .HasForeignKey("CultureGR_MVC_ModelFirst.Data.HistorianArchPlaces", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianMonuments", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithOne("HistorianMonuments")
                        .HasForeignKey("CultureGR_MVC_ModelFirst.Data.HistorianMonuments", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianMuseums", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithOne("HistorianMuseums")
                        .HasForeignKey("CultureGR_MVC_ModelFirst.Data.HistorianMuseums", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Monument", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Museum", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.CategoryMuseum", "CategoryMuseum")
                        .WithMany()
                        .HasForeignKey("category_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.Collection", "Collection")
                        .WithMany()
                        .HasForeignKey("collection_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.TimePeriod", "TimePeriod")
                        .WithMany()
                        .HasForeignKey("timeperiod_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CategoryMuseum");

                    b.Navigation("Collection");

                    b.Navigation("TimePeriod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Record", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.ArchaeologicalSite", null)
                        .WithMany("Records")
                        .HasForeignKey("ArchaeologicalSiteId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.CategoryMuseum", null)
                        .WithMany("Records")
                        .HasForeignKey("CategoryMuseumId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.Collection", null)
                        .WithMany("Records")
                        .HasForeignKey("CollectionId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.Excavation", null)
                        .WithMany("Records")
                        .HasForeignKey("ExcavationId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.HistorianArchPlaces", null)
                        .WithMany("Records")
                        .HasForeignKey("HistorianArchPlacesId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.HistorianMonuments", null)
                        .WithMany("Records")
                        .HasForeignKey("HistorianMonumentsId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.HistorianMuseums", null)
                        .WithMany("Records")
                        .HasForeignKey("HistorianMuseumsId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.Monument", null)
                        .WithMany("Records")
                        .HasForeignKey("MonumentId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.Museum", null)
                        .WithMany("Records")
                        .HasForeignKey("MuseumId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.Subscriber", null)
                        .WithMany("Records")
                        .HasForeignKey("SubscriberId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.TextEditor", null)
                        .WithMany("Records")
                        .HasForeignKey("TextEditorId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.TimePeriod", null)
                        .WithMany("Records")
                        .HasForeignKey("TimePeriodId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.WriterArchPlaces", null)
                        .WithMany("Records")
                        .HasForeignKey("WriterArchPlacesId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.WriterMonuments", null)
                        .WithMany("Records")
                        .HasForeignKey("WriterMonumentsId");

                    b.HasOne("CultureGR_MVC_ModelFirst.Data.WriterMuseums", null)
                        .WithMany("Records")
                        .HasForeignKey("WriterMuseumsId");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Subscriber", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithOne("Subscriber")
                        .HasForeignKey("CultureGR_MVC_ModelFirst.Data.Subscriber", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.TextEditor", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithOne("TextEditor")
                        .HasForeignKey("CultureGR_MVC_ModelFirst.Data.TextEditor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.TimePeriod", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.User", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.Record", null)
                        .WithMany("Users")
                        .HasForeignKey("RecordId");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterArchPlaces", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithOne("WriterArchPlaces")
                        .HasForeignKey("CultureGR_MVC_ModelFirst.Data.WriterArchPlaces", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterMonuments", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithOne("WriterMonuments")
                        .HasForeignKey("CultureGR_MVC_ModelFirst.Data.WriterMonuments", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterMuseums", b =>
                {
                    b.HasOne("CultureGR_MVC_ModelFirst.Data.User", "User")
                        .WithOne("WriterMuseums")
                        .HasForeignKey("CultureGR_MVC_ModelFirst.Data.WriterMuseums", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.ArchaeologicalSite", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.CategoryMuseum", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Collection", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Excavation", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianArchPlaces", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianMonuments", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.HistorianMuseums", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Monument", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Museum", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Record", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.Subscriber", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.TextEditor", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.TimePeriod", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.User", b =>
                {
                    b.Navigation("HistorianArchPlaces");

                    b.Navigation("HistorianMonuments");

                    b.Navigation("HistorianMuseums");

                    b.Navigation("Subscriber");

                    b.Navigation("TextEditor");

                    b.Navigation("WriterArchPlaces");

                    b.Navigation("WriterMonuments");

                    b.Navigation("WriterMuseums");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterArchPlaces", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterMonuments", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("CultureGR_MVC_ModelFirst.Data.WriterMuseums", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
